% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_10x_mtx.R
\name{read_10x_mtx_to_h5ad}
\alias{read_10x_mtx_to_h5ad}
\title{Read and integrate 10X MTX format single-cell data}
\usage{
read_10x_mtx_to_h5ad(
  csv_file,
  output_h5ad,
  min_counts_per_cell = 200,
  verbose = TRUE
)
}
\arguments{
\item{csv_file}{Character string specifying the path to the CSV file containing sample information.
The CSV file should have 4 columns: Sample_id, mtx_fns, features_fns, barcodes_fns}

\item{output_h5ad}{Character string specifying the output h5ad file path}

\item{min_counts_per_cell}{Numeric value specifying the minimum total counts per cell for filtering (default: 200)}

\item{verbose}{Logical indicating whether to print progress messages (default: TRUE)}
}
\value{
Invisibly returns the output file path
}
\description{
This function reads 10X MTX format data (matrix.mtx, features/genes.tsv, barcodes.tsv)
from multiple samples defined in a CSV file, performs basic QC filtering,
and exports the integrated data as an h5ad file.
}
\details{
This function performs the following steps:
\itemize{
\item Reads the CSV file containing sample information
\item For each sample, reads the MTX, features, and barcodes files (supports .gz compression)
\item Creates a features x cells sparse matrix for each sample
\item Performs basic QC filtering (removes cells with total counts < min_counts_per_cell)
\item Renames cell IDs to "Sample_id_cellID" to avoid duplicates
\item Integrates all samples into a single matrix
\item Exports the integrated data as an h5ad file
}

The CSV file format should be:
Sample_id,mtx_fns,features_fns,barcodes_fns
sample1,/path/to/matrix.mtx.gz,/path/to/features.tsv.gz,/path/to/barcodes.tsv.gz
sample2,/path/to/matrix.mtx,/path/to/genes.tsv,/path/to/barcodes.tsv
}
\examples{
\dontrun{
# Create a CSV file with sample information
sample_info <- data.frame(
  Sample_id = c("sample1", "sample2"),
  mtx_fns = c("/path/to/sample1/matrix.mtx.gz", "/path/to/sample2/matrix.mtx"),
  features_fns = c("/path/to/sample1/features.tsv.gz", "/path/to/sample2/genes.tsv"),
  barcodes_fns = c("/path/to/sample1/barcodes.tsv.gz", "/path/to/sample2/barcodes.tsv")
)
write.csv(sample_info, "samples.csv", row.names = FALSE)

# Read and integrate the data
read_10x_mtx_to_h5ad("samples.csv", "integrated_data.h5ad")
}

}
